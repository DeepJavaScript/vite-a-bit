@use "../utils/breakpoint";

$gutter-width: 30px;

%col-base {
  display: flex;
  position: relative;
  padding-left: ($gutter-width / 2);
  padding-right: ($gutter-width / 2);
  min-width: 1px;
  max-width: 100%;
  flex: 0 0 100%;
}

body {
  margin: 0;
  padding: 0;
}

.container {
  margin: 0 auto;
  max-width: 1200px;
  padding-left: ($gutter-width / 2);
  padding-right: ($gutter-width / 2);
}

.row {
  display: flex;
  margin-left: -($gutter-width / 2);
  margin-right: -($gutter-width / 2);
  flex-wrap: wrap;
}

.no-gutters {
  margin-right: 0;
  margin-left: 0;
  > [class*="col-"] {
    padding-right: 0;
    padding-left: 0;
  }
}

// to be refactored to function

.col-12 {
  @extend %col-base;
}

.col-6 {
  @extend %col-base;
  @include breakpoint.ml {
    max-width: 100% * (1/2);
    flex: 0 0 (100% * (1/2));
  }
}

.col-4 {
  @extend %col-base;
  @include breakpoint.tp {
    max-width: 100% * (1/3);
    flex: 0 0 (100% * (1/3));
  }
}

.col-3 {
  @extend %col-base;
  @include breakpoint.ml {
    max-width: 100% * (1/2);
    flex: 0 0 (100% * (1/2));
  }
  @include breakpoint.tl {
    max-width: 100% * (1/4);
    flex: 0 0 (100% * (1/4));
  }
}

.col-2 {
  @extend %col-base;
  @include breakpoint.tp {
    max-width: 100% * (1/3);
    flex: 0 0 (100% * (1/3));
  }
  @include breakpoint.d {
    max-width: 100% * (1/6);
    flex: 0 0 (100% * (1/6));
  }
}

// @mixin col($test){
//   flex:0 1 $test/12 * 100%;
// }




